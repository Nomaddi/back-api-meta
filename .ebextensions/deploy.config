# .ebextensions/02_additional_setup.config

option_settings:
    -
        namespace: aws:elasticbeanstalk:container:php:phpini
        option_name: document_root
        value: /public

container_commands:
    # Descargar y configurar Node.js (necesario para npm y compilación de activos)
    04_download_n:
        command: "curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o /usr/local/bin/n && chmod +x /usr/local/bin/n"
    06_install_specific_node:
        command: "/usr/local/bin/n 12.22.0"

    # Instalar dependencias de Node.js y compilar activos
    07_install_node_dependencies:
        command: "npm install"
        cwd: "/var/app/staging"
    08_compile_assets:
        command: "npm run production"
        cwd: "/var/app/staging"

    # Ajuste de permisos en /var/app/current para permitir operaciones de npm y php artisan
    14_adjust_permissions:
        command: "chmod -R 775 /var/app/current"
        ignoreErrors: true
    15_adjust_owner:
        command: "chown -R ec2-user:ec2-user /var/app/current"
        ignoreErrors: true

    # Configurar y activar los workers de Laravel
    09_reload_systemd:
        command: "systemctl daemon-reload"
    10_enable_worker_1:
        command: "systemctl enable laravel_worker@1"
    11_enable_worker_2:
        command: "systemctl enable laravel_worker@2"
    12_start_worker_1:
        command: "systemctl start laravel_worker@1"
    13_start_worker_2:
        command: "systemctl start laravel_worker@2"

files:
    "/etc/nginx/conf.d/https_redirect.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
        server {
            listen 80;
            server_name _;

            # Redirige todas las solicitudes HTTP a HTTPS
            return 301 https://$host$request_uri;
        }
    # Cron job para ejecutar el programador de Laravel cada 5 minutos
    /etc/cron.d/schedule_run:
        mode: "000644"
        owner: root
        group: root
        content: |
            */5 * * * * root . /opt/elasticbeanstalk/deployment/envvars && /usr/bin/php /var/www/html/artisan schedule:run 1>> /dev/null 2>&1

    # Configuración de logs de Laravel para Elastic Beanstalk
    /opt/elasticbeanstalk/tasks/taillogs.d/laravel-logs.conf:
        content: "/var/app/current/storage/logs/laravel.log"
        group: root
        mode: "000755"
        owner: root

    # Configuración de Nginx para tiempos de espera extendidos
    /etc/nginx/conf.d/proxy.conf:
        mode: "000755"
        owner: root
        group: root
        content: |
            client_header_timeout 300;
            client_body_timeout 300;
            keepalive_timeout 300;
            send_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            fastcgi_send_timeout 300;
            fastcgi_read_timeout 300;

    # Ajustes de PHP para mejorar tiempos de ejecución y límite de memoria
    /etc/php.ini:
        mode: "000755"
        owner: root
        group: root
        content: |
            max_execution_time = 300
            max_input_time = 300
            memory_limit = 512M

    # Configuración del servicio de Laravel Worker en Systemd
    /etc/systemd/system/laravel_worker@.service:
        mode: "000755"
        owner: root
        group: root
        content: |
            [Unit]
            Description=Laravel queue worker %i
            After=network.target

            [Service]
            User=nginx
            Group=nginx
            Restart=always
            RestartSec=3
            ExecStart=/usr/bin/php /var/www/html/artisan queue:work sqs --sleep=3 --tries=3

            [Install]
            WantedBy=multi-user.target
